import groovy.json.JsonOutput
import groovy.json.JsonSlurper

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = project.property('mod.version') + "-" + project.property('minecraft.version')
group = 'com.mrcrayfish'
archivesBaseName = project.property('mod.id')

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

mixin {
    add sourceSets.main, "morecfm.refmap.json"
}

minecraft {
    mappings channel: project.property('mappings.channel'), version: project.property('mappings.version')

    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=morecfm.mixins.json'
            mods {
                morecfm {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=morecfm.mixins.json'
            mods {
                morecfm {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=morecfm.mixins.json'
            args '--mod', 'morecfm', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                morecfm {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.15'
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
    compile fg.deobf('curse.maven:cfm-55438:3325365')
    compile fg.deobf('curse.maven:abnormalscore-382216:3233486')
    compile fg.deobf('curse.maven:autumnity-365045:3295700')
    compile fg.deobf('curse.maven:environmental-388992:3221635')
    compile fg.deobf('curse.maven:atmospheric-362393:3249309')
    compile fg.deobf('curse.maven:upgradeaquatic-326895:3249419')
    compile fg.deobf('curse.maven:endergetic-291509:3154938')
    compile fg.deobf('curse.maven:biomesoplenty-220318:3300293')
    compile fg.deobf('curse.maven:ohthebiomesyoullgo-247560:3302333')
}

processResources {
    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title"     : project.property('mod.name'),
            "Specification-Vendor"    : project.property('mod.author'),
            "Specification-Version"   : "1",
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : "${getArchiveVersion()}",
            "Implementation-Vendor"   : project.property('mod.author'),
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "morecfm.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
